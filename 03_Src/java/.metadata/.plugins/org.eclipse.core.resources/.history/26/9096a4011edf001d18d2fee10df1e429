package com.example;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;

import util.Alpha;
import util.VT100;

public class SetExample5 {
	/*
	 * set은 기존에 같은 데이터를 중복할 수 없기에 1개의 원소만 출력이 됨.
	 * list는 중복으로 저장이 가능하기 때문에 인덱스에 원소 중복저장이 됨. 
	 * 
	 */
	
	static class SetAlpha extends Alpha {
		
		void show() {
			show(1, 1);
		}
		
		void show(int offLine, int offColumn) {
			VT100.cursorMove(line + offLine-1, column + offColumn-1);
			VT100.setForeground(fg);
			VT100.setBackground(bg);
			VT100.print(ch);
		}
	}
	public static void main(String[] args) {
		VT100.reset();
		VT100.clearScreen();
		// set
		HashSet<SetAlpha> set = new HashSet<>();
		
		// list
		var list = new ArrayList<SetAlpha>();
		
		// 생성 list, set
		for(;;) {
			SetAlpha a = new SetAlpha();
			list.add(a);
			set.add(a);
			
			if (set.size() == 800)
				break;
		}
		
		//람다식 리스트를 읽어서 a의 show 호출.
//		list.forEach(a -> {a.show();});
		list.forEach(a -> a.show());
		
		
		System.out.println("End...");
	}
}
