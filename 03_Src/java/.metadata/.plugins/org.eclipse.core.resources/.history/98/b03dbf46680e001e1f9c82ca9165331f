package com.example.imple.reply;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;

import org.assertj.core.api.Assertions;
import org.assertj.core.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import com.example.imple.board.mapper.BoardMapper;
import com.example.imple.board.reply.mapper.ReplyMapper;
import com.example.imple.board.reply.model.Reply;
import com.fasterxml.jackson.databind.ObjectMapper;

@SpringBootTest
public class ReplyMapperTest {
	
	@Autowired
	ReplyMapper mapper;
	
	@Autowired
	BoardMapper boardmapper;
	
	@Autowired
	ObjectMapper objectMapper;
	
    @Test
    public void selectAll() {
        long Id = 1; // Board ID

        List<Reply> replies = mapper.selectAll(Id);

        // Assertions
        assertThat(replies).isNotNull();
        // Add more assertions based on your requirements
    }

    @Test
    public void testCountById() {
        long boardId = 1L; // Board ID

        int count = replyMapper.countById(boardId);

        // Assertions
        Assertions.assertEquals(2, count); // Modify expected count based on your data
    }

    @Test
    public void testInsertReply() {
        Reply reply = new Reply();
        // Set reply properties

        int result = replyMapper.insertReply(reply);

        // Assertions
        Assertions.assertEquals(1, result);
        // Add more assertions based on your requirements
    }

    @Test
    public void testDeletePost() {
        long replyId = 1L; // Reply ID

        int result = replyMapper.deletePost(replyId);

        // Assertions
        Assertions.assertEquals(1, result);
        // Add more assertions based on your requirements
    }

    @Test
    public void testUpdatePostById() {
        Reply reply = new Reply();
        // Set reply properties

        long replyId = 1L; // Reply ID

        long result = mapper.updatePostById(reply, replyId);

        // Assertions
        Assertions.assertEquals(1, result);
        // Add more assertions based on your requirements
    }

    @Test
    public void testDeleteReplyId() {
        int replyId = 1; // Reply ID

        int result = replyMapper.deleteReplyId(replyId);

        // Assertions
        Assertions.assertEquals(1, result);
        // Add more assertions based on your requirements
    }

}
