package com.example;

import java.sql.DriverManager;
import java.sql.SQLException;

/*
 * 예외 처리 Exception handling 
 * 
 * 
 */
public class TryCatchExample {
	
	public static void main(String[] args) {
		//Unhandled exception type SQLException
		
		System.out.println("Start...");
		
		try {
			DriverManager.getConnection("" , "", "");
		} catch (SQLException e) {
			System.out.println(e.getMessage());
			System.out.println("지금은 접속할 수 없습니다. ");
			System.out.println("5분 후에 재접속할 수 있습니다.  ");	
		System.out.println("End... ");
		
	}

	public static void main6(String[] args) {
		
		System.out.println("Start...");
		
			Thread.sleep(5000);
	
		System.out.println("End... ");
		
	}
	
	
	public static void main5(String[] args) throws InterruptedException {
		// checked exception 예외 처리
		// add throws declaration
		
		System.out.println("Start...");
		
			Thread.sleep(5000);
	
		System.out.println("End... ");
		
	}
	
	
	
	public static void main4(String[] args) {
		// unhandled exception : checked exception 예외 처리 try - catch 
		
		System.out.println("Start...");
		
		try {
			Thread.sleep(5000);
		} catch (Exception e) {
			
		}
		
		System.out.println("End... ");
	}
	
	
	
	public static void main3(String[] args) {
		// 다중 catch로 예외 처리
		
		int x = 3;
		String str = "Hello";
		
		try {
			int result = 10/x;	// ArithmeticException		
			
			str.charAt(0);		// NullPointerException
			
			int[] nums = {1, 2, 3};
			nums[3] = 10;
			
		} catch (ArithmeticException e) {
			System.out.println("0으로 나눌 수 없습니다.");
//			e.printStackTrace();	// error print 
		} catch (NullPointerException e) {
			System.out.println("Null 입니다. Null은 연산할 수 없습니다.");
//		} catch (Exception e) {
//			System.out.println(e.getMessage());
		} finally {
			System.out.println("finally block's always working.");
		}
		
		System.out.println("End.. ");
		
	}
	
	
	
	public static void main2(String[] args) {
		// try-catch 예외 처리 
		
		System.out.println("start");
		System.err.println("start");		// err type print
		System.out.println("start");
		
		try {
			int result = 10/0;		// runtime exception을 조상으로 둔 예외클래스. 
		} catch (ArithmeticException e) {
			
		}
		
		
		
		
		System.out.println("End.. ");
		
	}

}
