package com.example.blink;


import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;


import util.Color;
import util.VT100;

public class BlinkWorldExample2 {

	static class Blink extends TimerTask{
		static Random r = new Random();
		
		int line;
		int column;
		Color fg;
		Color bg;
		String str;
		
		public Blink(String str) {
//			super();	생성자 존재함 상속 from TimerTask
			line = r.nextInt(2, 20);
			column = r.nextInt(2, 40);
			do {
				fg = Color.values()[r.nextInt(8)];
				bg = Color.values()[r.nextInt(8)];
			}while (fg==bg);
			
			this.str = str;
		
		}
		
		void show() {
			VT100.cursorMove(line, column);
			VT100.setForeground(fg);
			VT100.setBackground(bg);
			VT100.print(str);
		}
		
		void hide() {
			VT100.cursorMove(line, column);
			VT100.reset();
			for(int i=0; i<str.length(); i++) 
				VT100.print(' ');
			
		}
		
		boolean blink = true;
		
		@Override
		public void run() {
			
			if (blink)
				show();
			else
				hide();
			
			blink = !blink;
		}
		
	}
	
	static enum Direction {
		Up, Down, Left, Right
	}
	
	Random random = new Random();
	static class RunAlpha extends TimerTask {
		static Random r = new Random();
		String[] sub = new String[4];
		
		int line;
		int column;
		Color fg;
		Color bg;
		String str;  
		
		
		Direction direction;
	
		public RunAlpha(String str1, String str2, String str3, String str4) {
			
			line= 1;
			column =1;
//			this.sub = {"java", "python", "android", "oracle"};
			this.str= str;
			
			do {
				fg= Color.values()[r.nextInt(8)];
				bg= Color.values()[r.nextInt(8)];
			} while (fg==bg);
			
			direction = Direction.Right;
			
			show();
		}
		
		void show() {
			VT100.cursorMove(line, column);
			VT100.setForeground(fg);
			VT100.setBackground(bg);
			VT100.print(str);
		}
		
		void hide() {
			VT100.cursorMove(line, column);
			VT100.reset();
			for(int i=0; i<str.length(); i++)
				VT100.print(" ");
		}

		@Override
		public void run() {
			hide();
			
			if (line==1 && column==40)
				direction = Direction.Down;
			else if (line==20 && column==40)
				direction = Direction.Left;
			else if (line==20 && column==1)
				direction = Direction.Up;
			else if (line==1 && column==1)
				direction = Direction.Right;
			
			switch (direction) {
			case Right:
				column++;
				break;
			case Down:
				line++;
				break;
			case Left:
				column--;
				break;
			case Up:
				line--;
				break;				

			default:
				break;
			}
			show();	
		}
 	}
	
	public static void main(String[] args) throws InterruptedException {
		VT100.reset();
		VT100.clearScreen();

		Timer timer = new Timer();
		
		for (int i=0; i<1; i++) {
			
			Blink java = new Blink("Java");
			timer.schedule(java, 0, 100);
			
			Blink python = new Blink("Python");
			timer.schedule(python, 0, 500);
			
			Blink android = new Blink("Android");
			timer.schedule(android, 0, 1000);
		}
		
		for (int i=0; i<4; i++) {
			RunAlpha ra = new RunAlpha("java", "python", "android", "oracle");
			
			
//			Blink java = new Blink("Java");
			timer.schedule(ra, 0, RanAlpha.);
			
//			Blink python = new Blink("Python");
			timer.schedule(python, 0, 500);
			
//			Blink android = new Blink("Android");
			timer.schedule(android, 0, 1000);	
			
			
		}
		
		Thread.sleep(10000);
		timer.cancel();
		
		VT100.cursorMove(21, 1);
		VT100.reset();
		VT100.println("End...");

	}

}
