package com.example.jdbc;

import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Random;

import util.Color;
import util.VT100;

public class AlphaSortExample2 {

//	static class Alpha {
//		static Random r = new Random();
//		
//		
//		public Alpha() {
//			line = r.nextInt(1, 21);
//			column = r.nextInt(1, 21);
//			do {
//				fg = Color.values()[r.nextInt(8)];
//				bg = Color.values()[r.nextInt(8)];
//			}while (fg==bg);
//			ch = (char)r.nextInt('A', 'Z'+1);
//		}
//		
//	}

	public static void main(String[] args) throws SQLException, InterruptedException {

		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String user = "scott";
		String password = "tiger";
		
		var conn= DriverManager.getConnection(url, user, password);
		conn.setAutoCommit(false);
		
		var r = new Random();
		
		int line; 
		int column;
		Color fg;
		Color bg;
		char ch;

		var stmt = conn.createStatement();
		
		var pSelect = conn.prepareStatement("""
				select count(*) 
				  from random
				 where no = ? 
			""");
	
		var pInsert = conn.prepareStatement("""
					insert into random values(?, 1) 
				""");
		
		var pUpdate = conn.prepareStatement("""
					update random
					   set cnt= (select cnt from random where no = ?) + 1 
					 where no = ? 
			""");
		
		var pDelete = conn.prepareStatement("""
				delete from random
		""");
		
		pDelete.executeUpdate();		
		
//		int sequence = r.nextInt();
		VT100.reset();
		VT100.clearScreen();


		for (;;) {
			int sequence = r.nextInt(1, 1000);
//			System.out.println(sequence);
			pSelect.setInt(1, sequence);
					
			VT100.reset();
			VT100.clearScreen();
			VT100.cursorMove(1, 1);
			System.out.println("InsertNumber" + sequence);
			System.out.println("CountNumber" );
			var rs = pSelect.executeQuery("""	
				select * 
				  from alpha
				 order by line asc, col asc, fg asc, bg asc
				""");
			
			while(rs.next()){
				line = rs.getInt("line");
				column = rs.getInt("col");
				fg = Color.valueOf(rs.getString("fg"));
				bg = Color.valueOf(rs.getString("bg"));
				ch = rs.getString("ch").charAt(0);

				VT100.cursorMove(line, column);
				VT100.setForeground(fg);
				VT100.setBackground(bg);
				VT100.print(ch);
				
				Thread.sleep(1);
			}
			
			if(rs.getInt(1)==0) {	// insert
					pInsert.setInt(1, sequence);
					pInsert.executeUpdate();
			} else {
					do {
						fg = Color.values()[r.nextInt(8)];
						bg = Color.values()[r.nextInt(8)];
					}while (fg==bg);
					ch = (char)r.nextInt('A', 'Z'+1);
			
				    pUpdate.setInt(1, sequence);
				    pUpdate.setString(2, fg.toString());
				    pUpdate.setString(3, bg.toString());
				    pUpdate.setString(4, Character.toString(ch));
				    pUpdate.setInt(5, sequence);
				    pUpdate.executeUpdate();
			}
			
			var rs2 = stmt.executeQuery("""	
					select * 
					  from alpha
					 order by line asc, col asc, fg asc, bg asc
					""");
			rs2.next();
			
			var rs3 = stmt.executeQuery("""	
					select * 
					  from alpha
					 order by line asc, col asc, fg asc, bg asc
					""");
			rs3.next();
			
			var rs4 = stmt.executeQuery("""	
					select * 
					  from alpha
					 order by line asc, col asc, fg asc, bg asc
					""");
			rs4.next();
			
			int count = rs2.getInt(1);
			if (count==800) 
				break;

		}
		
		conn.commit();
		conn.close();
		
//		VT100.reset();
		
		
		VT100.cursorMove(43, 1);
		System.out.println("End.. ");
	}

}