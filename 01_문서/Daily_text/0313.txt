03-13

Python 

python 설치  - at opt

cmd 에서 python open
> where python
> python

close python : ctrl + z + Enter

d: 03_Src>  mkdir python

d: 03-Src>python> mkdir chap01

D:\03_Src\python>cd chap01

D:\03_Src\python\chap01>vim Hello.py


print("Hello python") 

:wq 저장 종료

D:\03_Src\python\chap01>cat Hello.py

D:\03_Src\python\chap01>vim variable.py

sum = 0

for i in range(10):
    sum = sum + i


print("sum = ", sum)

D:\03_Src\python\chap01>cat variable.py

sum = 0

for i in range(10):
    sum = sum + i


print("sum = ", sum)

D:\03_Src\python\chap01>vim variable.py
sum = 0

for i in range(1, 11):
    sum = sum + i


print("sum = ", sum)

D:\03_Src\python\chap01>python variable.py
sum =  55


python librery package 설치하기.. "pip"
 > pip install ipython 
pip = (package installer for paython)
pip를 통해서 패키지를 설치해서 사용한다. 

>ipython 
> ipython exit : ctrl + D

python 도 repl 환경이다. 

REPL 환경 
: READ EVAL PRINT LOOP
 읽기    평가   출력   반복 
     (evaluation)

> pip install numpy  
> pip install pandas


java shell = > jshell
python shell = > ipython 

python의 사칙연산의 나눗셈은 java와 조금 다름. 
java는 항의 타입을 가지고 나눗셈의 정수 또는 실수타입을 구분하지만
python은 자동으로 나눗셉은 실수타입으로 출력한다 
이때 정수부분만 출력하려면 ex ) 10//3 = 3 으로 /를 한번 더 주어야 한다. 
but 음수에서는 조금은 다르다 ex ) -10//3 = -4

java는 반드시 ;을 입력해야하지만 
python은 ; 이 없어도 enter를 동작시 자동으로 입력된다. 
( python에서는 ;유무에 영향을 받지 않음. )
python은 문자 타입이 없다 why? 전부 문자타입이기 때문. 
python has no String or char type. 

java에서 문자열은 "String"
python 문자열은 'String' ok or "String" ok // both are okay in python

python 에서는 cls 기능이 없지만 ipython 에서는 cls 기능이 있다. (clearing the screen)
jshell clearing the screen : ctrl + l
jshell print / println : comes only one.
but ipython put multiple print orders. 
ex)  In [7]: print(10, 20, 11, 30, "xxx")
	10 20 11 30 xxx

python has only one print order : " print "
python formet = >>  In [11]: "%04d/%02d/%02d" % (2030, 10, 30)
		Out[11]: '2030/10/30'
		In [12]: print("%04d/%02d/%02d" % (2030, 10, 30))
		2030/10/30


LiClipse install 
	setting :
	> windows > Preferences > PyDev > interpreters 
	> Python interpreter > New > config first in PATH
	> check the python and location (C:\opt\Python311\python.ext)
	> Apply and close  

Make new project : 
	> File > PyDev Project  Project name : *****
	> check Create 'src' folder and add in to the PYTHONPATH

	New > PyDev Module 
			name : it doesnt matter with upper or lower case

LiClipse Terminal plugin 
	> Help > Eclipse Marketplace > find Terminal search >
	> TM Terminal 10.7 > install


format in python =  # 파이썬의 주석 코멘트는  # 이다.  = only # . 

새로운 파일을 실행할 때 최초 실행시 우측마우스 Run As >> 1 Python run

src file 에서 ctrl alt t : terminal open

		> ipython TriangleExample.py
		> python TriangleExample.py

turtle 
open new Py Dev Module 
------------------------------------------------------------------
 	import turtle 
	from tkinter imort mainloop	

	t = turtle.Turtle('trutle')

	t.speed(1)
	t.pencolor('red')
	t.circle(100)
	
	for i in range(4):	# python의 반복문  in range(*):
	     t.forward(100)	# 들여쓰기 반복문에 포함.  
	     t.left(90)	# python의 들여쓰기 space*4
	
	mainloop()

	print ("Program End..")
---------------------------------------------------------------------
mainl >> mainloop >> tkinter._init_

python int 형식으로 출력 방법
	jumsu = int(r.random()*101)

랜덤 출력  import random 
	
	jumsu = int(random.random()*101

import random as r  을 사용해서 random을 r로 짧게 표현 할 수 있다.
	jumsu = int(r.random()*101

python의 if statement --------------------------------------------

import random as r

jumsu = int(r.random()*101)
grade = 'F'


if jumsu>=90:
    grade = 'A'
elif jumsu>=80:
    grade = 'B'
elif jumsu>=70:
    grade = 'C'
elif jumsu>=60:
    grade = 'E'
elif jumsu>=50:
    grade = 'F'
    
print(jumsu)




print (jumsu, " => ", grade)

print ("Program End....")


	
	


	


==========================
 
computer
 반복적인 작업에 효율과 가성이 좋다. 
 범용성  ( 프로그램 설치 - 여러가지 작업가능 / 스마트폰)

	Computer porgram
 명령어(instruction)들의 리스트를 주어 일을 실행시킨다
 프로그램 (program) : 컴퓨터가 수행할 명령어 목록의 문서. 

	프로그램 = 작업지시서 "소스파일"

	Embedded program 
 컴퓨터 이외에 설치되는 프로그램 
 Embedded program : 전자기기에 내장되는 프로그램 / 
	하드웨어와 소프트웨어가 결합된 전자제어 시스템. 

프로그래밍 언어  - 컴퓨터의 언어 / 자연어를 기계어로 변경할 수 있는 언어

기계어 (machine language ) :	컴퓨터가 알아듣는 유일한 언어
			기계어는 0과 1로 구성된다. 
			초기의 컴퓨터에서는 기계어를 사용하여
			프로그램을 했었다.  

프로그래밍 언어. 
	인간의 언어게 접근한 프로그래밍 언어가 개발된다.
	인간이 프로그래밍 언어를 배워서 프로그램을 작성하면
	컴파일러(copfiler)라고 하는 변역을 담당하는 소프트웨어가 
	프로그램을 기계어로 번역한다.

*********************************************************************************


- 파이썬 Python -
 	- 1991년 귀도 반 로섬 (Guido van Rossum) 이 개발한 
	대화형 프로그래밍 언어.. 
- 파이선의 특징
	- 생산성이 뛰어나다.
	- 초보자한테 좋은 언어 : 인터프리터 언어.
	- 파이썬은 문법이 쉬워서 코드를 보면 
	직관적으로 알 수있는 부분이 많다.
	ex) if "사과" in ["딸기", "바나나", "포도", "사과"]:
		print(" 사과가 있습니다 ")
	- 파이썬은 다양한 플랫폼에서 사용 
	- 라이브러리가 풍부
	- 애니메이션이나 그래픽을 쉽게 사용	

	python 은 인터프리터 언어 : 

	Python interpretrer가 소스코드를 실행하면서 작동한다. 
	컴파일러(compiler)를 사용하는 C언어나 자바와는 달리 
	파이썬은 인터프리터에 의해 실행되는 스크립트 언어입니다. 
	인터프리터(interpreter)란 소스 코드를 처음부터 한 라인씩 
	차례대로 해석하며 실행하는 프로그램입니다.

 	python은 변수의 타입, 세미콜론이 없다.  but( : )이 있다.~~!

Python download 
DOS 명령크롬프트 "python" 입력
windows 시작 메뉴에서 IDLE 프로그램 실행

- python shell >>> 
	- 파이썬 쉘에서는  >>> 뒤에 명령어를 입력하고 
	enter - 명령어가 실행 - 결과가 화면에 출력. 

python librery package 설치하기.. "pip"
 > pip install ipython (package installer for paython)
pip를 통해서 패키지를 설치해서 사용한다. 

>ipython 
> ipython exit : ctrl + D

- 첫 번째 프로그램 분석하기 
	: 파이썬 프로그램은 여러 줄의 명령어로 이루어진다. 
	한줄의 명령어를 문장 (statement)이라고 부른다.
	: 문장들은 파이썬 인터프리터에 의하여 순차적으로 진행된다.

- python 문자열 
	: 문자열 (String) : 큰 따옴표 "" 나 작은 따옴표 '' 안에 들어 있는 
	텍스트 데이터 
	: 반드시 따옴표가 있어야 한다. 큰/ 작은 상관없음. 

	>>> print(Hello World!)
		SyntaxError : invalid syntax

- print() 함수
	: 여러 개의 값들을 화면에 차례대로 출력할 수 있다. 
	>>>print("결과 값은", 2*7, "입니다")
	결과값은 14입니다.

- 스크립트 모드
 	: 코드가 복잡해지면 인터프리트 모드는 번거롭다

- 소스파일 작성하기
	: 텍스트 에디터를 이용하여 명령어들을 파일에 저장한 후에 
	파일을 읽어서 명령어들을 하나씩 실행하는 방법이 있다 . 
	명령어들이 저장된 파일을 소스파일(source file)이라고 한다.

- 온도 변환 프로그램
 	: 화씨온도 -> 섭씨온도
	ftemp = 90.0
	ctemp = (ftemp-32.0)*5.0/9.0
	print(ctemp)

- 프로그램의 간단한 분석
	ftemp = 90.0 	# ftemp 화씨 온도를 저장하는 변수 
			# = 90.0 > (=)연산자를 이용하여 ftemp 변수에 저장한다.  
	ctemp = (ftemp-32.0)*5.0/9.0	# ctemp 섭씨 온도를 저장하는 변수
				# (ftemp-32.0)*5.0/9.0 :  '90.0' 화씨 온도를 섭씨 온도로 변환한다.  
	print(ctemp)

	# 명령어들은 위에서 아래로 순차적으로 실행된다. 

- 변수 
	: 파이썬은 변수의 타입이 없다. 
	: 변수와 변수값으로 반드시 초기화 해야 한다.
	: 변수는 컴퓨터의 메모리 안에 만들어지는 공간으로 우리는 여기에 숫자나 문자를 저장할 수 있다. 

- 변수 값을 저장할 때 
	전체적인 구조 >>>  ftemp = 90.0 
	(=) 연산자를 기준으로 >>>> 왼쪽에는 변수. = 오른쪽에는 변수에 저장할 값을 적어준다 

- 터틀 그래픽 turtle grapic
	: 카테시안 공간에서 커서(turtle)를 이용하여서 그림을 그리는 기능. 










 