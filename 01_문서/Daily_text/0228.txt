02-28


변수 타입명/ 선언과 동시에 값을 줄수있다. 
 , = 나열연산자

int	/ long	10L
double 	/ float	10.5f
char

	지수 표기 방법 = 10.5E7  : 10.5 * 10의 7승 
		10.5E-7


데이터 타입 = 수치  / 문자 



REPL =
	REPL(read-eval-print loop) 또는 인터랙티브 톱레벨(interactive toplevel), 
	랭기지 셸(language shell)은 단일 사용자의 입력(예: 단일 식)을 취하고 
	이를 평가(실행)하고 결과를 사용자에게 반환시키는 단순한 
	상호작용 컴퓨터 프로그래밍 환경이다. 
	REPL 환경으로 작성된 프로그램은 구간마다 실행된다. 
	이 용어는 보통 클래식 리스프 머신 상호작용 환경과 유사한 
	프로그래밍 인터페이스를 의미하기도 한다. 일반적인 예로는 
	프로그래밍 언어를 위한 명령 줄 셸 및 유사 환경을 들 수 있으며 
	기법은 스크립트 언어의 특징과 매우 닮아있다

at cmd  $ jshell  (jshell open)
 jshell

closed jshell : ctrl + d or /exit
		/help 
	ctrl + l : clear page 

소스파일을 만들고 컴파일을 하지 않아도 jshell을 통해서 간단한 문법을 확인할수있다.


**** 실수 타입
float과 double 타입
- 실수 타입에는 float과 double이 있음
타입	메모리 크기 		저장되는 값의 허용 범위 	유효 소수 이하자리
float 	4byte 	32bit		1.4*10E-45 ~ 3.4 *10E38	7자리
double	8byte 	64bit		4.9*10E-324 ~ 1.8 * 10E308	15자리

boolean 타입 변수에 대입되는 논리 타입
- 참과 거짓을 의미  true / false

문자열과 string 타입 
문자열 큰 따옴표 ("") 로 감싼 문자들
문자열을 변수에 저장하려면 String 타입을 사용
이스케이프 문자 : 문자열 내부에 역슬래쉬 \가 붙은 문자

자동타입변환

캐스팅연산자로 강제 타입 변환하기
캐스팅연산자 괄호 () 사용. 

연산식 자동타입 변환
연산식에서  int 타입의 자동변환
- 정수 타입 변수가 산술 연산식에서 피연산자로 사용되면 
int 타입보다 작은 byte, short 타입 변수는 자동 변환되어 연산 수행

-byte 변수가 피연산자로 사용되면 변수값은 int값으로 연산되며, 
결과값 역시 byte 변수가 아닌 int 변수에 저장해야 함

 
String 타입변환하기 
변환타입 String -->> byte , short, int, long, float, double, boolean
- 기본 타입의 값을 문자열로 변경할 때는 String.valueOf() 메소드 이용


문자열 ' 1 ' + 1 
==> 51

Integer .parseIn("100") ;
: 문자 100를 숫자 100으로 변환함
 
변수 사용 범위 
변수 범위를 나타내는 중괄호 {} 블록
- 조건문과 반복문의 중괄호 {} 블로 내에 선언된 변수는
해당 중괄호 {} 블록 내에서만 사용가능
블럭기호 {} : 코드 영역을 감싸는 것. 
	블럭은 변수의 스코프(사용기간)을 결정한다. 
	블럭 안에 선언된 변수는 블럭 안에서만 유효하다.

콘솔로 변수값 출력 
println() 메소드로 변수값 출력하기  : 출력문 println / print / printf
- 모니터에 밧을 출력하기 위해 System.out.println() 이용
- 출력 방법에 따라 println() 이외에도 다음과 같이  print(),  printf()를 사용할 수 있음

메소드 					의미
println(내용);			괄호 안의 내용을 출력하고 행을 바꿔라.
print(내용);			괄호 안의 내용을 출력하고 행은 바꾸지 말아라.
printf("형식문자열" , 값1, 값2,.. );	형식 문자열에 맞추어 뒤의 값을 출력해라. 
	


- printf()의 형식 문자열에서는 %와 
conversation(변환 문자)를 필수로 작성 하고 나머지는 생략 가능


		printf("형식문자열", 값1, 값2, .... )
		          형식문자열 	형식 문자열에 제동될 값
				
 % [argument_index$] [flags]  	[width] 	[.precision] conversion	
	값의 순번 	    -,0 	전체자릿수 소수자릿수 변환문자	
   --------------------------생략가능-----------------------

	%conversion : % 지정자 = %d, %x, %c, %f, %s


키보드 입력 데이터를 변수에 저장
Scanner 타입 변수 활용하기 	
- Scanner 타입 변수를 선언하고 대입 연산자 =를 사용해서 new 연산자로 생성한 Scanner 객체를 
변수에 대입

Scanner scanner         =     new Scanner(System.in);
 Scanner 변수 선언 		Scanner 객체 생성	
	생성된 Scanner를 변수에 대입

- scanner.nextLine()을 실행하면 키보드로 입력된 내용을 문자열로 읽고 
좌측 String 변수에 저장 

String inputData      =      scanner.nextLine();
String 변수 선언	     enter키를 누르면 입력된 문자열을 읽음
	읽은 문자열을  String 변수에 저장	



Java-Turle
download 우측마우스 다름이름으로 저장 
03_Src java chap02 src 
file name Turtle.java 

eclipse press f5 refresh 

new package 'util' - Turtle.java  init

at bin terminal 
open jshell -v

> import util.Turtle;
> Turtle t = new Turtle();

> t.forward(100)

> t.speed(500)

> t.forward(100)

> t.backward(400)

> t.speed(1000)

> t.home()

> t.left(90)

> t.forward(200)

> t.right(180)

> t.forward(400)

> t.left(135)

> t.forward(200*1.414213)

> double length = 200*1.414213;

> t.left(90)

> t.forward(length)

> t.home()

> double radius = 141.4214

>  t.dot("red", radius*2);



-----------------------------------------

>Math.pow(10, 3);

>Math.pow(10, 2);       

>Math.sqrt(2)



 
> double radius = Math.sqrt(Math.pow(200, 2) - Math.pow(length/2, 2));


Turtle bob = new Turtle();

double x=-180;

double y=-200;

double turnAngle=bob.towards(x,y)-bob.getDirection();

bob.right(turnAngle);

double dist=bob.distance(x,y);

for(int i=0;i<7;i++)

{

    bob.forward(dist/7);

    bob.stamp();

}

-------------------------------------------------------------------

