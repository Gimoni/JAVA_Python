0425-javascript 기본 문법

0424-jsp web basic +++ 

javascript 는 대소문자 구분 **** !!!!!

javascript에서  변수를 만들 때 현재는 
보편적으로 let을 사용해서 초기화를 함 . 

과거 // 변수구분을 하지 않거나 var를 사용함
var는 블록스코프를 따라가지 않음 
ex ))) for(조건에 var i=0; ~~~)
var i 는 for문 조건에 블록 스코프를 따르지 않고 
외부에서도 구분없이 사용을 하기에 권장하지 않음. 

스코프의 차이와 최신 버전 권장에 따라 let을 사용함
또 다르게 사용하는 ' const '

what is const? - java의 final과 같은 존재 


javascript에서 변수를 만드는 방법 
: 1.  num = 10;		// 가능은 하지만  X 쓰지 않는다
: 2.  var num = 20;		// 가능, but 권장하지 않음
: 3.  let num = 30;		// 가능, 권장함. 
: 4.  const num = 40;


javascript 에서 biginteger type을 선언하려면 
정수에 n을 붙여 준다 
let num = 12345678901234567890n 

모든 산술 연산은 실수형으로 연산된다. 


> "20" + 10
'2010'

단항연산자를 사용해서 문자열에서 
산술식을 구현할 수 있음.
 
> +"20" +10
30


백틱을 사용한 정수 문자열화
> `${num}, ${num2}`
'100, 12345678901234567000'
> `${num}, ${num2}`
'100, 12345678901234567000'


멀티라인을 사용할 때 ` 사용
멀티라인 스트링을 만들 수 있고 
스트링안에 표현식을 구현할 수 있음. 

> `
... num=
... ${num}
... `
'\n\n\nnum=\n100\n\n'

> let str = `
... java
... python
... html
... css
... javascript
... `
undefined
> console.log(str);

java
python
html
css
javascript



function을 사용해서 함수 생성가능. 

delete는 객체의 속성을 삭제할 때 사용. 
javascrip interpriter language는 객체의 속성을 삭제 할 수 있음.

// 객체 리터럴 
> let x =
... {
... line : 10,
... column : 20,
... fg : 31,
... bg : 41,
... ch : 'A',
... }

> x
{ line: 10, column: 20, fg: 31, bg: 41, ch: 'A' }

> typeof x
'object'
> x.line
10
> x.fg
31

// delete 사용.
> delete x.line
true
> x
{ column: 20, fg: 31, bg: 41, ch: 'A' }



스크립트 타입 언어는 문자타입이 없음 / 문자열 만 있음

>>"A".codePointAt(0)
>> 65 

>> String.fromCodePoint(65)
>> 'A'


문자열은 '' 와 "" 의 구분을 하지 않음.
이스케이프문자 \ 역슬래시
\t 수평 탭
\n 행 바꿈
\\ 역슬래시
\' 작은 따옴표 
\" 큰 따옴표
문자열 연결  + 

======================
조건문 
 : if 조건문 
- 조건이 true 이면 문장을 실행하고 false 이면 문장 무시
- 실행 문장이 한 행이면 중괄호 생략 가능함
- 실행 문장이 여러 행이라면 중괄호 필요함

if (조건) {
       문장
}

 : if else 조건문 
- 두 가지로 분명하게 나뉘는 상황에서 편리하게 사용 가능
- 실행 문장이 한 행이면 중괄호 생략 가능함
- 실행 문장이 여러 행이라면 중괄호 필요함

if (조건) {
       문장 
} else {
       문장
}  

 : 중첩 조건문 if else if 조건문

if (조건) {
       if (조건) {
             문장 
       } else {
             문장
       }  
} else {
       if (조건) {
             문장 
       } else {
             문장
       }  
}  


: 중첩 조건문의 중괄호를 생략했을 때 만드는 조건문 
- if else if 조건문

if (조건) {
       문장 
} else if (조건) {
       문장
} else if (조건) {
       문장
} else {
       문장
}

반복문
: 배열 
- 변수 여러 개를 한꺼번에 다룰 수 있는 자료형
- 요소 : 배열 내부에 입력된 자료 하나하나
- 배열 내부에 다양한 자료형을 입력 가능
- 배열 전체를 출력하면 요소가 순서대로 표시



: while 반복문
- 가장 기본적인 반복문
- if 조건문과 형식이 비슷하지만,
if 조건문과 달리 불 (bool) 표현식이 참이면 중괄호 안 문자을 계속 실행

while (조건) {
       문장
}

for 반복문 
- for 반복문은 원하는 횟수만큼 반복하고 싶을 때 사용 
- 






함수
- 선언과 호출, 실행 우선순위
- 선언과 호출
- 함수 - 코드 집합을 나타내는 자료형
- 익명 함수 생성 - 함수 이름을 입력하지 않고 만들기
- 선언적 함수 생성 - 함수 이름을 입력해서 만들기











