03-28

객체지향은... 
oop 는 정보를 노출하지 않는 방향을 지향
information hiding  (정보 은닉) : 자바는 information hiding을 
철저히 지키도록 권장함. 
외부에서 직접적으로 필드를 접근하는 것을 싫어함. ,,

Getter / Setter : information hiding 을 실행하기 위한 것.. 
	데이터를 보호하며 간접적으로 안전사용이 가능하도록 실행함. 

getter/ setter는 일반적으로 public 으로 사용. why ? 외부에서 접근해야하기 때문. 
필드에 오른쪽 마우스 - source - generate getter setter - select the getter setter items..

* getter setter 에서 boolean type 만  get/set 이 아닌 is로 generated 됨. 

외부에서 필드에 직접 접근하지 말고 메소드를 통해서 접근하도록 하는 장치 

getter setter의 장점  : 값에 대한 유효성 검사가 가능.. 





Singleton 
무분별한 인스턴스 생성을 제한하는 것. new 생성을 제한한다. 
생성자를 private으로 둬야 한다. 

===============================문제 풀이

1장 10장 . (21p.)
객체지향 문제 풀이..

1. 하나의 클래스로 여러 객체를 생성할 수 있다.

2. 클래스의 구성 멤버는 : 필드 메소드 생성자

3. 클래스는 필드와 메소드 중 반드시 둘 중 하나라도 가져야 한다. 

4. 필드는 생성자 선언 전후에 관계없이 선언이 가능하다. 

5. 객체를 생성하려면 생성자 호출이 반드시 필요하다. 

6. 메소드 이름은 중복해서 선언할 수 있다. (메소드 오버로딩)

7. 메소드 오버로딩은 리턴타입과는 관계 없다. 

8. 인스턴스 필드는 정적블록에서 초기화 될 수 없다.  (정적블록 초기화 안됨)
	정적 멤버 - 인스턴스 멤버 사용 불가. 

9. final 필드는 생성자에서 초기화 되지만 상수는 생성자에서 초기화 될 수 없다. 
	static final (상수)는 static block (정적 블록)에서 초기화. 

10. 패키지에 소속된 클래스만 옮겨놓으면 동작하지 않는데 패키지 전체를 옮겨야 동작함. 

11. default  접근 제한은 같은 패키지 범위에서 사용을 허가한다. 

12. 