03-10

참조타입 

String 
int []
열거형

배열. 

배열 복사하기 Array copy 
- 1차원 배열만 복사가능 
2차원 이상의 배열은 한번에 복사 할 수 없음..

---------------------------------------
배열 복사 
How we copy the array ? 

배열의 크기를 초기화한 이후엔 
배열의 크기를 수정할 수 없다. 

System.arraycopy(nums, nums2,nums2, num1, num2);
:
Copies an array from the specified source array, beginning at thespecified position, 
to the specified position of the destination array.A subsequence of array components are 
copied from the sourcearray referenced by src to the destination arrayreferenced by dest. 
The number of components copied isequal to the length argument. 
The components atpositions srcPos through srcPos+length-1 in the source array are copied 
ntopositions destPos through destPos+length-1, respectively, of the destinationarray. 
If the src and dest arguments refer to thesame array object, then the copying is performed
 as if thecomponents at positions srcPos through srcPos+length-1 were first copied to 
a temporaryarray with length components and then the contents ofthe temporary array were 
copied into positions destPos through destPos+length-1 of thedestination array. 

If dest is null, then a NullPointerException is thrown. 

If src is null, then a NullPointerException is thrown and the destinationarray is not modified. 

Otherwise, if any of the following is true, an ArrayStoreException is thrown 
and the destination isnot modified: 
•The src argument refers to an object that is not anarray. 
•The dest argument refers to an object that is not anarray. 
•The src argument and dest argument referto arrays 
whose component types are different primitive types. 
•The src argument refers to an array with a primitivecomponent type and 
the dest argument refers to an arraywith a reference component type. 
•The src argument refers to an array with a referencecomponent type and
 the dest argument refers to an arraywith a primitive component type. 

Otherwise, if any of the following is true, an IndexOutOfBoundsException isthrown and the destination is not modified: 
•The srcPos argument is negative. 
•The destPos argument is negative. 
•The length argument is negative. 
•srcPos+length is greater than src.length, the length of the source array. 
•destPos+length is greater than dest.length, the length of the destination array. 

Otherwise, if any actual component of the source array fromposition srcPos 
through srcPos+length-1 cannot be converted to the componenttype of 
the destination array by assignment conversion, an ArrayStoreException is thrown. 
In this case, let k be the smallest nonnegative integer less thanlength such that 
src[srcPos+k]cannot be converted to the component type of the destinationarray;
 when the exception is thrown, source array components frompositions srcPos 
through srcPos+k-1will already have been copied to destination array positions 
destPos through destPos+k-1 and no otherpositions of the destination array will 
have been modified.(Because of the restrictions already itemized, thisparagraph 
effectively applies only to the situation where botharrays have component types that are reference types.)
Parameters:src the source array.srcPos starting position in the source array.
dest the destination array.destPos starting position in the destination data.
length the number of array elements to be copied.
Throws:IndexOutOfBoundsException - if copying would causeaccess of 
data outside array bounds.ArrayStoreException - if an element in the srcarray could
 not be stored into the dest arraybecause of a type mismatch.NullPointerException
 - if either src or dest is null.


- 객체를 참조하는 배열
	배열에서 객체 참조하기
	: 기본 타입 Primitive type (byte, char, short, int, long, float, double, boolean) 
	배열은 각 항목에 값을 직접 저장
	: 참조 타입 Reference type (class, interface) 배열은 각 항목에 객체의 번지를 저장
	
	String[] strArray = new String[3];
	strArray[0] = "Java";
	strArray[1] = "C++";
	strArray[2] = "C#";

- 배열 복사
	배열 복사하기
	: 배열은 한 번 생성하면 길이를 변경할 수 없음.
	더 많은 저장 공간이 필요하다면 더 큰 길이의 배열을 새로 만들고
	이전 배열로부터 항목들을 복사해야 함.

	: System의 arraycopy() 메소드를 이용해 배열 복사 가능
	
	System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length);
		         원본 배열 	원본 배열  새 배열 	새 배열	 복사 항목 수
				복사		붙여넣기
				시작 인덱스	시작 인덱스

- 배열 항목 반복을 위한 향산된 for문
	배열 및 컬렉션 처리에 용이한 for 문
	: 카운터 변수와 증감식을 사용하지 않고, 항목의 개수만큼 
	반복한 후 자동의로 for 문을 빠져나감
	
	: for 문이 실행되면 1. 배열에서 가져올 항목이 있을 경우  2. 변수에 항목을 저장,
	3. 실행문을 실행
	
	: 다시 반복해서 1. 배열에서 가져올 다음 항목이 존재하면 
	2. - 3. - 1. 로 진행하고 가저올 다음 항목이 없으면  for 문을 종료

	for ( 2. 타입변수 : 1. 배열 ) {
		3. 실행문;
	}

		for (int i=0; i<nums2.length; i++)		// 전통적인 for 문. / index를 구할 수 있음. 
			System.out.printf("%d,", nums2[i]);
		
		for (int v : nums2)				// 향상된 for 문 : / index를 구할 수 없음. 배열을 읽기만 할 떄...  
			System.out.println(v + ",");


- main() 메소드의 String[] 매개변수 용도
	String[] args 매개변수의 필요성
	: 자바 프로그램을 실행하기 위해 main() 메소드를 작성하면서 
	문자열 배열 형태인 String[]args 매개변수가 필요
	: 프로그램 실행 시 입력값이 부족하면 길이가 0인 String 배열 참조

		{"10", "20"};
		main() 메소드 호출 시 전달
				****	
	public static void main(String[] args) { ... }


- 열거 (Enum) 타입
	한정된 값으로 이루어진 Enum 타입
	: 요일, 계절처럼 한정된 값을 갖는 타입
	: 먼저 열거 타입 이름으로 소스파일(.java)을 생성하고 한정된 값을 코드로 정의
	: 열거 타입 이름은 첫 문자를 대문자로 하고 캐멀 스타일로 지어주는 것이 관례

>>> Week.java
	
	1	package ch05.sec12;
	2			
	3	public enum Week (열거 타입 이름 ) {
	4		MONDAY,		// 열거 상수 목록 (한정된 값 목록)
	5		TUESDAY,
	6		WEDESDAY,
	7		THURSDAY,
	8		FRIDAY,
	9		SATURDAY,
	10		SUNDAY
	11	}

	java library already has enum : DayOfWeek--->	DayOfWeek week = DayOfWeek.FRIDAY;
















